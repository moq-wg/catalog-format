{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-04-21T00:31:58.447537+00:00",
  "repo": "moq-wg/catalog-format",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOKMx0ks5v7S5a",
      "title": "Expand on the field names to be verbose ",
      "url": "https://github.com/moq-wg/catalog-format/issues/1",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "suhasHere"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-01T17:45:44Z",
      "updatedAt": "2023-09-02T05:43:37Z",
      "closedAt": "2023-09-02T05:43:37Z",
      "comments": []
    },
    {
      "number": 2,
      "id": "I_kwDOKMx0ks5v7S-H",
      "title": "Custom object values need not be string types",
      "url": "https://github.com/moq-wg/catalog-format/issues/2",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-01T17:46:02Z",
      "updatedAt": "2023-09-02T05:08:38Z",
      "closedAt": "2023-09-02T05:08:38Z",
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDOKMx0ks5v7TG0",
      "title": "Add a catalog number and define parent/child relationship",
      "url": "https://github.com/moq-wg/catalog-format/issues/3",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need the following\r\n - Add Catalog Seq Number and explain how it is related to Parent Seq Num\r\n - Make parent seq num independent of MoQT object number",
      "createdAt": "2023-09-01T17:46:36Z",
      "updatedAt": "2023-09-04T16:24:18Z",
      "closedAt": "2023-09-04T16:24:18Z",
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "Proposal is to add two fields:\r\n\r\n1.  Catalog sequence number (CSN)- a required  integer starting at 0 and monotonically increasing with each successive catalog update.\r\n2.  Parent sequence number  (PSN) - an optional reference pointing at a prior (not necessarily previous) catalog sequence number. \r\n\r\nIf the PSN is absent, then the catalog is an independent catalog. If it is present, then the catalog represents a delta update. Having a sequence number independent of the transport sequencing allows catalogs to be distributed over moq-transport, or http or another transport and still be interpreted correctly. ",
          "createdAt": "2023-09-04T15:26:17Z",
          "updatedAt": "2023-09-04T15:26:17Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOKMx0ks5v7TSY",
      "title": "Expand multi-catalog format example to clarify a catalog for tracks will follow ",
      "url": "https://github.com/moq-wg/catalog-format/issues/4",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-01T17:47:14Z",
      "updatedAt": "2023-09-04T15:49:41Z",
      "closedAt": "2023-09-04T15:49:41Z",
      "comments": []
    },
    {
      "number": 5,
      "id": "I_kwDOKMx0ks5v7UGT",
      "title": "Alternates subscription needs less stronger normative requirement",
      "url": "https://github.com/moq-wg/catalog-format/issues/5",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "replace SHOULD subscribe with might typically subscribe ",
      "createdAt": "2023-09-01T17:48:42Z",
      "updatedAt": "2023-09-02T05:14:00Z",
      "closedAt": "2023-09-02T05:14:00Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOKMx0ks5v7UJC",
      "title": "Track names MUST be unique per declared namespace",
      "url": "https://github.com/moq-wg/catalog-format/issues/6",
      "state": "CLOSED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add a note to this effect",
      "createdAt": "2023-09-01T17:48:47Z",
      "updatedAt": "2023-09-04T15:55:47Z",
      "closedAt": "2023-09-04T15:55:47Z",
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOKMx0ks5v9WvP",
      "title": "Add support for layered codec",
      "url": "https://github.com/moq-wg/catalog-format/issues/10",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-02T05:15:45Z",
      "updatedAt": "2023-09-03T04:59:04Z",
      "closedAt": "2023-09-03T04:59:04Z",
      "comments": [
        {
          "author": "suhasHere",
          "authorAssociation": "COLLABORATOR",
          "body": "Done in #14 ",
          "createdAt": "2023-09-03T04:59:02Z",
          "updatedAt": "2023-09-03T04:59:02Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOKMx0ks5wU1oo",
      "title": "Make operations string type ",
      "url": "https://github.com/moq-wg/catalog-format/issues/18",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There was a feedback from Victor on making track operation string enumeration to enhance readability. It feels like a fine suggestion",
      "createdAt": "2023-09-06T18:07:50Z",
      "updatedAt": "2023-09-08T13:25:32Z",
      "closedAt": "2023-09-08T13:25:31Z",
      "comments": []
    },
    {
      "number": 19,
      "id": "I_kwDOKMx0ks5wU1zI",
      "title": "Fix missing packaging field in the example",
      "url": "https://github.com/moq-wg/catalog-format/issues/19",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-06T18:08:19Z",
      "updatedAt": "2023-09-08T13:11:29Z",
      "closedAt": "2023-09-08T13:11:29Z",
      "comments": []
    },
    {
      "number": 22,
      "id": "I_kwDOKMx0ks5yBH2D",
      "title": "Examples not matching the new verbose field names. ",
      "url": "https://github.com/moq-wg/catalog-format/issues/22",
      "state": "CLOSED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "For example\r\n\r\n`\"selectionParams\":{\"c\":\"opus\",\"sr\":48000,\"cc\":\"2\",\"br\":32000}`\r\n\r\nshould be\r\n\r\n`\"selectionParams\":{\"codec\":\"opus\",\"sampleRate\":48000,\"channelConfig\":\"2\",\"bitrate\":32000}`",
      "createdAt": "2023-09-26T07:42:59Z",
      "updatedAt": "2023-09-26T07:58:20Z",
      "closedAt": "2023-09-26T07:58:20Z",
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOKMx0ks5yZcFy",
      "title": "Track names in Example 3.4.7 need correcting",
      "url": "https://github.com/moq-wg/catalog-format/issues/24",
      "state": "CLOSED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "{\r\n  \"version\": 1,\r\n  \"sequence\": 0,\r\n  \"streamingFormat\": 1,\r\n  \"streamingFormatVersion\": \"0.2\",\r\n  \"namespace\": \"sports.example.com/games/08-08-23/12345\",\r\n  \"packaging\": \"cmaf\",\r\n  \"renderGroup\":1,\r\n  \"tracks\": [\r\n    {\r\n      \"name\": \"video_4k\",\r\n      \"selectionParams\":{\"codec\":\"avc1.640033\",\"mimeType\":\"video/mp4\",\"width\":3840,\"height\":2160,\"framerate\":30,\"bitrate\":14931538},\r\n      \"initTrack\":\"init_video_4k\",\r\n      \"altGroup\": 1\r\n    },\r\n    {\r\n      \"altGroup\": \"video_1080\",\r\n      \"selectionParams\":{\"codec\":\"avc1.640028\",\"mimeType\":\"video/mp4\",\"width\":1920,\"height\":1080,\"framerate\":30,\"bitrate\":9914554},\r\n      \"initTrack\":\"init_video_1080\",\r\n      \"altGroup\": 1\r\n    },\r\n    {\r\n      \"altGroup\": \"video_720\",\r\n      \"selectionParams\":{\"codec\":\"avc1.64001f\",\"mimeType\":\"video/mp4\",\"width\":1280,\"height\":720,\"framerate\":30,\"bitrate\":4952892},\r\n      \"initTrack\":\"init_video_720\",\r\n      \"altGroup\": 1\r\n    },\r\n    {\r\n      \"altGroup\": \"audio_aac\",\r\n      \"selectionParams\":{\"codec\":\"mp4a.40.5\",\"mimeType\":\"audio/mp4\",\"samplerate\":48000,\"channelConfig\":\"2\",\"bitrate\":67071},\r\n      \"initTrack\":\"init_audio_aac\",\r\n      \"altGroup\": 2\r\n    },\r\n    {\r\n      \"name\": \"audio_ec3\",\r\n      \"selectionParms\":{\"codec\":\"ec-3\",\"mimeType\":\"audio/mp4\",\"samplerate\":48000,\"channelConfig\":\"F801\",\"bitrate\":256000},\r\n      \"initTrack\":\"init_audio_ec3\",\r\n      \"altGroup\": 2\r\n    }\r\n   ]\r\n}",
      "createdAt": "2023-09-29T13:25:58Z",
      "updatedAt": "2023-11-09T17:29:51Z",
      "closedAt": "2023-11-09T17:29:51Z",
      "comments": []
    },
    {
      "number": 25,
      "id": "I_kwDOKMx0ks5ydA72",
      "title": "3.2.25. Bitrate",
      "url": "https://github.com/moq-wg/catalog-format/issues/25",
      "state": "OPEN",
      "author": "acbegen",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Which bitrate is this reflecting? How do we set this for VBR content? ",
      "createdAt": "2023-09-30T10:34:58Z",
      "updatedAt": "2023-11-03T20:26:27Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "Good question. HLS defines variant bitrate using two parameters\r\n\r\n> BANDWIDTH : It represents the peak segment bit rate of the Variant Stream.\r\n> AVERAGE-BANDWIDTH: the value is a decimal-integer of bits per second.  It represents the average segment bit rate of the Variant Stream. \r\n\r\nDASH defines bitrate using there interplay between two parameters\r\n\r\n> @bandwidth @MinBufferTime - consider a hypothetical constant bitrate channel of bandwidth with the value of this attribute in bits per second (bps). Then, if the Representation is continuously delivered at this bitrate, starting at any SAP that is indicated either by @startWithSAP or by any Segment Index box, a client can be assured of having enough data for continuous playout providing playout begins after @minBufferTime * @bandwidth bits have been received.\r\n\r\nWebCodecs defines bitrate quote ambiguously\r\n\r\n> bitrate - The average bitrate of the encoded video given in units of bits per second.\r\n\r\n\r\nI find the DASH approach, while technically correct, to be difficult to interpret by many implementers. The WebCodes approach seems underdefined. So perhaps for MoQ catalog we go with the two understandable properties of:\r\n\r\n- average-bandwidth (required) \r\n- peak-bandwidth (optional) - indicates degree of VBR variance\r\n\r\nAs soon as we specify average, we need to give an indication over which timebase we are taking the average. For GOP segmented content, the GOP is a natural base over which to average the . For a track which is has a single GOP, what timebase would be appropriate? ",
          "createdAt": "2023-11-03T20:20:41Z",
          "updatedAt": "2023-11-03T20:26:27Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOKMx0ks5ydBae",
      "title": "Registry for catalog fields",
      "url": "https://github.com/moq-wg/catalog-format/issues/26",
      "state": "CLOSED",
      "author": "acbegen",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I suggest creating an IANA registry for catalog fields with values auto-populated from Section 3.2.",
      "createdAt": "2023-09-30T10:42:22Z",
      "updatedAt": "2024-04-03T15:38:20Z",
      "closedAt": "2024-04-03T15:38:20Z",
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "What is the point of shifting the catalog fields definitions to IANA? IANA is useful for ensuring global uniqueness. If a single specification defines the catalog format, then that spec if a much more efficient and natural place to define the fields used by that format. ",
          "createdAt": "2023-11-03T11:36:25Z",
          "updatedAt": "2023-11-03T11:36:25Z"
        },
        {
          "author": "acbegen",
          "authorAssociation": "NONE",
          "body": "If we end up needing new fields (which we certainly will), we don't need a revised RFC. The fields table can be amended/expanded in a number of ways. ",
          "createdAt": "2023-11-03T17:45:32Z",
          "updatedAt": "2023-11-03T17:45:32Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOKMx0ks5ydBfc",
      "title": "3.2.15. Alternate group",
      "url": "https://github.com/moq-wg/catalog-format/issues/27",
      "state": "OPEN",
      "author": "acbegen",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "`Alternate tracks SHOULD have matching framerate [Section 3.2.24](https://www.ietf.org/archive/id/draft-wilaw-moq-catalogformat-01.html#framerate) and media time sequences.`\r\n\r\nDifferent video representations can easily have different frame rates. I don't see the reason for this \"SHOULD.\"",
      "createdAt": "2023-09-30T10:43:37Z",
      "updatedAt": "2023-11-03T17:48:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "While they certainly can have different framerates, the days of having the lower renditions at 15fps to save bandwidth are mostly passed by. I view of a lot of CMAF-based production manifests and playlists and the majority today use matching framerates . Constraining alt tracks to have a matching framerate makes player audio/video sync simpler . ",
          "createdAt": "2023-10-11T11:21:14Z",
          "updatedAt": "2023-10-11T11:21:14Z"
        },
        {
          "author": "suhasHere",
          "authorAssociation": "COLLABORATOR",
          "body": "Also to note, matching framerates will enable changing groups across alt groups natural too. ",
          "createdAt": "2023-10-11T14:20:04Z",
          "updatedAt": "2023-10-11T14:20:04Z"
        },
        {
          "author": "acbegen",
          "authorAssociation": "NONE",
          "body": "> Constraining alt tracks to have a matching framerate makes player audio/video sync simpler .\r\n\r\nMaybe, but frame rate changes do not require decoder re-initialization. So, I view this as an unnecessary constraint. ",
          "createdAt": "2023-11-03T17:48:22Z",
          "updatedAt": "2023-11-03T17:48:22Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOKMx0ks5zQBgF",
      "title": "Make Selection parameters a json object",
      "url": "https://github.com/moq-wg/catalog-format/issues/29",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Today we have codec selection Parameters as comma separated string. This is fine but requires special parsing for just this field. It might be good to make them as json too",
      "createdAt": "2023-10-09T18:24:45Z",
      "updatedAt": "2023-10-11T11:23:40Z",
      "closedAt": "2023-10-11T11:23:39Z",
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "They are already a JSON object. See the examples in Sect 3.4. \r\n\r\n```\r\n{\r\n  \"version\": 1,\r\n  \"sequence\": 0,\r\n  \"streamingFormat\": 1,\r\n  \"streamingFormatVersion\": \"0.2\",\r\n  \"namespace\": \"conference.example.com/conference123/alice\",\r\n  \"packaging\": \"loc\",\r\n  \"renderGroup\": 1,\r\n  \"tracks\": [\r\n    {\r\n      \"name\": \"video\",\r\n      \"selectionParams\":{\"codec\":\"av01.0.08M.10.0.110.09\",\"width\":1920,\"height\":1080,\"framerate\":30,\"bitrate\":1500000}\r\n    },\r\n    {\r\n      \"name\": \"audio\",\r\n      \"selectionParams\":{\"codec\":\"opus\",\"samplerate\":48000,\"channelConfig\":\"2\",\"bitrate\":32000}\r\n    }\r\n   ]\r\n}\r\n```",
          "createdAt": "2023-10-11T11:23:39Z",
          "updatedAt": "2023-10-11T11:23:39Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOKMx0ks513ZKZ",
      "title": "Consider JSON Patch / JSON Merge Patch for delta updates",
      "url": "https://github.com/moq-wg/catalog-format/issues/31",
      "state": "CLOSED",
      "author": "englishm",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "If we can do away with sequence numbers, we may be able to move to a standardized format for delta updates:\n\nhttps://datatracker.ietf.org/doc/html/rfc6902/",
      "createdAt": "2023-10-04T21:37:11Z",
      "updatedAt": "2023-11-29T13:56:02Z",
      "closedAt": "2023-11-29T13:56:02Z",
      "comments": [
        {
          "author": "englishm",
          "authorAssociation": "NONE",
          "body": "Alternatively: https://datatracker.ietf.org/doc/html/rfc7396",
          "createdAt": "2023-10-04T21:42:18Z",
          "updatedAt": "2023-10-04T21:42:18Z"
        },
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "I think is a good approach. Prefer RFC6902 over RFC7396. I am preparing slides and PR for IETF #118. ",
          "createdAt": "2023-11-04T18:53:32Z",
          "updatedAt": "2023-11-04T18:53:32Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDOKMx0ks518RC8",
      "title": "Allow namespace to be inherited",
      "url": "https://github.com/moq-wg/catalog-format/issues/33",
      "state": "CLOSED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per the discussion at https://github.com/moq-wg/moq-transport/issues/252#issuecomment-1793925057, it would be useful that if the namespace were absent, that track names would inherit the namespace of the catalog track in which they were defined. This capability allows for relative naming, which aids in portability.",
      "createdAt": "2023-11-06T09:53:40Z",
      "updatedAt": "2023-11-09T17:28:02Z",
      "closedAt": "2023-11-09T17:28:02Z",
      "comments": []
    },
    {
      "number": 35,
      "id": "I_kwDOKMx0ks57xFWw",
      "title": "Current examples reference the obsolete 'sequence' field",
      "url": "https://github.com/moq-wg/catalog-format/issues/35",
      "state": "CLOSED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The sequence field was removed when we switched to JSON patch for updating and allowed the transport's Object sequence number to denote the order of the patches. ",
      "createdAt": "2024-01-11T12:11:53Z",
      "updatedAt": "2024-04-03T15:37:26Z",
      "closedAt": "2024-04-03T15:37:26Z",
      "comments": []
    },
    {
      "number": 37,
      "id": "I_kwDOKMx0ks59nesV",
      "title": "Add a new root object to hold inheritable track fields",
      "url": "https://github.com/moq-wg/catalog-format/issues/37",
      "state": "CLOSED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In the current design, any track fields such as selectionParams, initTrack, renderGroup, packaging etc  can be added at the root level. This design does not promote extensibility as it prohibits adding future fields to the root that should not be interpreted as inheritable track fields.\r\n\r\nProposal is to add a new root object called \"commonTrackFields\" to explicitly hold fields intended to be inherited by all tracks. Example:\r\n\r\n```\r\n{\r\n    \"version\": 1,\r\n    \"streamingFormat\": 1,\r\n    \"streamingFormatVersion\": \"0.2\",\r\n    \"commonTrackFields\": {\r\n        \"packaging\": \"cmaf\",\r\n        \"renderGroup\": 1,\r\n        \"altGroup\": 1\r\n    },\r\n    \"tracks\": [\r\n        {\r\n            \"name\": \"video_4k\",\r\n            \"selectionParams\": {\r\n                \"codec\": \"avc1.640033\",\r\n                \"mimeType\": \"video/mp4\",\r\n                \"width\": 3840,\r\n                \"height\": 2160,\r\n                \"framerate\": 30,\r\n                \"bitrate\": 14931538\r\n            },\r\n            \"initTrack\": \"init_video_4k\"\r\n        },\r\n        {\r\n            \"name\": \"video_1080\",\r\n            \"selectionParams\": {\r\n                \"codec\": \"avc1.640028\",\r\n                \"mimeType\": \"video/mp4\",\r\n                \"width\": 1920,\r\n                \"height\": 1080,\r\n                \"framerate\": 30,\r\n                \"bitrate\": 9914554\r\n            },\r\n            \"initTrack\": \"init_video_1080\"\r\n        },\r\n        {\r\n            \"name\": \"video_720\",\r\n            \"selectionParams\": {\r\n                \"codec\": \"avc1.64001f\",\r\n                \"mimeType\": \"video/mp4\",\r\n                \"width\": 1280,\r\n                \"height\": 720,\r\n                \"framerate\": 30,\r\n                \"bitrate\": 4952892\r\n            },\r\n            \"initTrack\": \"init_video_720\"\r\n        },\r\n        {\r\n            \"name\": \"audio_aac\",\r\n            \"selectionParams\": {\r\n                \"codec\": \"mp4a.40.5\",\r\n                \"mimeType\": \"audio/mp4\",\r\n                \"samplerate\": 48000,\r\n                \"channelConfig\": \"2\",\r\n                \"bitrate\": 67071\r\n            },\r\n            \"initTrack\": \"init_audio_aac\",\r\n            \"altGroup\": 2\r\n        },\r\n        {\r\n            \"name\": \"audio_ec3\",\r\n            \"selectionParms\": {\r\n                \"codec\": \"ec-3\",\r\n                \"mimeType\": \"audio/mp4\",\r\n                \"samplerate\": 48000,\r\n                \"channelConfig\": \"F801\",\r\n                \"bitrate\": 256000\r\n            },\r\n            \"initTrack\": \"init_audio_ec3\",\r\n            \"altGroup\": 2\r\n        }\r\n    ]\r\n}\r\n```\r\n",
      "createdAt": "2024-01-30T10:37:21Z",
      "updatedAt": "2024-04-11T09:03:52Z",
      "closedAt": "2024-04-11T09:03:52Z",
      "comments": []
    },
    {
      "number": 38,
      "id": "I_kwDOKMx0ks5-lGeH",
      "title": "Interim Feb 2024: Add a property to indicate if a catalog support delta updates as a root property",
      "url": "https://github.com/moq-wg/catalog-format/issues/38",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-07T18:45:14Z",
      "updatedAt": "2024-04-09T10:06:14Z",
      "closedAt": "2024-04-09T10:06:14Z",
      "comments": []
    },
    {
      "number": 41,
      "id": "I_kwDOKMx0ks6BMV0U",
      "title": "Move packaging type enums to an IANA table",
      "url": "https://github.com/moq-wg/catalog-format/issues/41",
      "state": "OPEN",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently the draft hard codes two enums for the  - \"cmaf\" and \"loc\". This is a undesireable idea as these should really be dictated by whichever spec defines the packaging format. It also makes the addition of new formats require a catalog spec change, which is inflexible. It would be nice to be able to add new packaging formats without revising the catalog spec. \r\n\r\nThe proposal is for the catalog draft refer to instead an IANA table \"MoQ Catalog Packaging Types\" for allowed packaging types.\r\nThen the CMAF packaging draft can populate the IANA table with the value that it wants to use and similarly the LOC draft can populate the IANA table with a value that it defines. Future packging types can update the IANA table directly. \r\n\r\nThis registry would managed by the IANA according to the Specification Required policy of [RFC5226]. The table might look something like this:\r\n\r\n\r\n| Packaging field identifier    | Description    |  Specification  |\r\n| ------------- | ------------- |------------- |\r\n| cmaf        | Common Media Application Format     |  ISO/IEC 23000-19:2020 |\r\n| loc   | Low Overhead Container Format     |  RFCYYYY  |\r\n\r\n\r\n\r\n",
      "createdAt": "2024-03-04T18:42:51Z",
      "updatedAt": "2024-03-04T18:42:51Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 43,
      "id": "I_kwDOKMx0ks6BU2MW",
      "title": "Feb Interim 2024 - Revisit Json Patch",
      "url": "https://github.com/moq-wg/catalog-format/issues/43",
      "state": "OPEN",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "this might be related to #42 .. we discussed to revisit Json patch at the interim and the scope of that needs to be re-evaluated.",
      "createdAt": "2024-03-05T17:00:49Z",
      "updatedAt": "2024-03-05T17:36:25Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "Was the only concern with JSON Patch that some applicantion environments might not have a pre-built library for it?  If so, do you have an update mechanism that would be more convenient/performant/broadly supported than JSON patch that should be considered?",
          "createdAt": "2024-03-05T17:36:24Z",
          "updatedAt": "2024-03-05T17:36:24Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOKMx0ks6D9gjg",
      "title": "Streaming format should be a string not an integer",
      "url": "https://github.com/moq-wg/catalog-format/issues/44",
      "state": "OPEN",
      "author": "JonathanLennox",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I think it would make more sense for the \"streaming format\" field to be a string rather than an integer.  (It should still be IANA-registered, though.)",
      "createdAt": "2024-03-28T19:10:02Z",
      "updatedAt": "2024-03-28T22:37:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JonathanLennox",
          "authorAssociation": "NONE",
          "body": "(I think this was discussed in the chat at one of the interims, but it never got surfaced higher than that.)",
          "createdAt": "2024-03-28T19:16:37Z",
          "updatedAt": "2024-03-28T19:16:37Z"
        },
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "Seems reasonable. Should there be a max length? I find such fields get abused by people embedding 2,000 lines of javascript in the streaming format identifier. ",
          "createdAt": "2024-03-28T20:36:00Z",
          "updatedAt": "2024-03-28T20:36:00Z"
        },
        {
          "author": "JonathanLennox",
          "authorAssociation": "NONE",
          "body": "Hm, that hadn't occurred to me, that's a good point...if it's IANA-registered you could require a registration policy that requires it to be something sensible, though this doesn't help for non-registered fields.\r\n\r\nYou'll probably want people to use identifiers like `my-proposed-new-catalog-format-draft-04` for the draft versions that are under development (for the usual reason to prevent the draft versions from polluting the namespace for the final release version).  \r\n\r\nNormally I'd invoke the computer science principle that \"all arbitrary numbers should be powers of 2\", but in this case it's possibly better to make it explicit that the value is indeed arbitrary, so I'll say:\r\n\r\nMax 100 bytes.\r\n\r\nI'm sure we could bikeshed forever about what characters should be allowed in the string, but I think that's something that needs to be defined more widely for this draft, since MoQTransport allows track namespaces, e.g., to be arbitrary binary strings.  I can open another issue for that.\r\n\r\nAs a strawman for this item specifically, I'd suggest ASCII-only, from the set `[A-Za-z0-9_.-]`.",
          "createdAt": "2024-03-28T22:30:04Z",
          "updatedAt": "2024-03-28T22:34:16Z"
        },
        {
          "author": "JonathanLennox",
          "authorAssociation": "NONE",
          "body": "Opened https://github.com/moq-wg/catalog-format/issues/45 for the track namespace grammar issue but I think the grammar of this field should be substantially more restricted.",
          "createdAt": "2024-03-28T22:34:01Z",
          "updatedAt": "2024-03-28T22:34:01Z"
        },
        {
          "author": "JonathanLennox",
          "authorAssociation": "NONE",
          "body": "Note for clarity: `[A-Za-z0-9_.-]` is standard regular expression syntax (Posix ERE or PCRE or whatever): square brackets are delimiters, `-` is a range operator except when at the beginning or the end.\r\n\r\nSo my suggestion is that tokens can contain alphanumerics, underscore, period, or dash, but nothing else.",
          "createdAt": "2024-03-28T22:37:10Z",
          "updatedAt": "2024-03-28T22:37:10Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOKMx0ks6D-yTY",
      "title": "Should the catalog format constrain the grammar of track namespaces and track names?",
      "url": "https://github.com/moq-wg/catalog-format/issues/45",
      "state": "OPEN",
      "author": "JonathanLennox",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "MOQ Transport says:\r\n\r\n>    In this specification, both the Track Namespace and the Track Name\r\n>   are not constrained to a specific encoding.  They carry a sequence of\r\n>   bytes and comparison between two Track Namespaces or Track Names is\r\n>   done by exact comparison of the bytes.  Specifications that use MoQ\r\n>   Transport may constrain the information in these fields, for example\r\n>   by restricting them to UTF-8.  Any specification that does needs to\r\n>   specify the canonicalization into the bytes in the Track Namespace or\r\n>   Track Name such that exact comparison works.\r\n\r\nShould the catalog format indeed constrain the grammar of these fields, whether just be restricting them to be valid UTF-8 or somehow further?  (Valid URI?  ASCII-Only?). Otherwise we need to deal with arbitrary binary data in the track namespaces and track names, which can be challenging at best to represent in JSON.",
      "createdAt": "2024-03-28T22:33:05Z",
      "updatedAt": "2024-04-02T10:01:42Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "The JSON spec requires UTF-8 support by decoders, so it seems sensible to inherit that flexibility. We should state this explicitly in the spec.  I'd like to support our Chinese, Korean and Japanese colleagues with the ability to specify namespace and names in their character sets. \r\n\r\n```\r\n\"namespace\" : \"\u7279\u522b\u9879\u76ee/2025\u5e745\u67081\u65e5\"\r\n\"name\":\"\u89c6\u9891\"\r\n```\r\n\r\nIf a streaming format wishes to further constrain these names to be URIs, or ASCII, it may do so, however the catalog spec itself should not force those restrictions. \r\n\r\nSimilarly, if a streaming format wishes to support binary namespace and names, these can be encoded as base64 strings in the catalog and the application would understand how to convert them to their wire format. \r\n\r\n```\r\n\"namespace\" : \"c2FtcGxlbmFtZXNwYWNl\"\r\n\"name\":\"c2FtcGxlbmFtZQ==\"\r\n```",
          "createdAt": "2024-04-02T10:01:41Z",
          "updatedAt": "2024-04-02T10:01:41Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 7,
      "id": "PR_kwDOKMx0ks5ZY19l",
      "title": "Expand field names ",
      "url": "https://github.com/moq-wg/catalog-format/pull/7",
      "state": "MERGED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "resolves #1 ",
      "createdAt": "2023-09-02T05:04:27Z",
      "updatedAt": "2023-09-02T05:21:47Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "48f5305fe5fefd34f5e13427c74368c98d2fdc7e",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "suhas",
      "headRefOid": "2080722618072295678518368c009f83882c2431",
      "closedAt": "2023-09-02T05:15:53Z",
      "mergedAt": "2023-09-02T05:15:53Z",
      "mergedBy": "suhasHere",
      "mergeCommit": {
        "oid": "33d8b737c43c2851180bf8c686e5414bbd0df488"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOKMx0ks5ZY2Hp",
      "title": "Fix text on custom field value to have any type",
      "url": "https://github.com/moq-wg/catalog-format/pull/8",
      "state": "MERGED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #2 ",
      "createdAt": "2023-09-02T05:07:53Z",
      "updatedAt": "2023-09-02T05:08:42Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "afd74b69a5ba3e908e9f0ee4f23339a8698eefa8",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "iss_2",
      "headRefOid": "2bfa5b99fec7dced44e309f6ed8cafc071c8dc07",
      "closedAt": "2023-09-02T05:08:37Z",
      "mergedAt": "2023-09-02T05:08:37Z",
      "mergedBy": "suhasHere",
      "mergeCommit": {
        "oid": "4d10415455748625a8791aea82a29affe5081692"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 9,
      "id": "PR_kwDOKMx0ks5ZY2Wn",
      "title": "update text for alternate subscriptions",
      "url": "https://github.com/moq-wg/catalog-format/pull/9",
      "state": "MERGED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #5 ",
      "createdAt": "2023-09-02T05:11:42Z",
      "updatedAt": "2023-10-09T15:56:35Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "4d10415455748625a8791aea82a29affe5081692",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "issue_5",
      "headRefOid": "930ed7f6005d565a514846487e08d8b9f0dc24ed",
      "closedAt": "2023-09-02T05:13:59Z",
      "mergedAt": "2023-09-02T05:13:59Z",
      "mergedBy": "suhasHere",
      "mergeCommit": {
        "oid": "48f5305fe5fefd34f5e13427c74368c98d2fdc7e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 11,
      "id": "PR_kwDOKMx0ks5ZY3Jz",
      "title": "Revert \"Expand field names \"",
      "url": "https://github.com/moq-wg/catalog-format/pull/11",
      "state": "MERGED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-02T05:21:20Z",
      "updatedAt": "2023-10-09T15:56:17Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "33d8b737c43c2851180bf8c686e5414bbd0df488",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "revert-7-suhas",
      "headRefOid": "85436f4fb3b20dcbce93cfce6a58780860acafa7",
      "closedAt": "2023-09-02T05:21:26Z",
      "mergedAt": "2023-09-02T05:21:26Z",
      "mergedBy": "suhasHere",
      "mergeCommit": {
        "oid": "141f4b71aa0fc8ff5319d6dc08cd55f75ea3e1f2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 12,
      "id": "PR_kwDOKMx0ks5ZY3qp",
      "title": "update",
      "url": "https://github.com/moq-wg/catalog-format/pull/12",
      "state": "CLOSED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-02T05:29:20Z",
      "updatedAt": "2023-10-09T15:56:15Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "141f4b71aa0fc8ff5319d6dc08cd55f75ea3e1f2",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "suhas",
      "headRefOid": "8feeb7dff431d4b534c596cd514d575ea2c3ae1e",
      "closedAt": "2023-09-02T05:30:34Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 13,
      "id": "PR_kwDOKMx0ks5ZY30C",
      "title": "update",
      "url": "https://github.com/moq-wg/catalog-format/pull/13",
      "state": "MERGED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #1 ",
      "createdAt": "2023-09-02T05:32:54Z",
      "updatedAt": "2023-10-09T15:56:12Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "141f4b71aa0fc8ff5319d6dc08cd55f75ea3e1f2",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "names",
      "headRefOid": "06b6b61a16e3974c993a1dc77cf212b68cf01fbf",
      "closedAt": "2023-09-02T05:41:20Z",
      "mergedAt": "2023-09-02T05:41:20Z",
      "mergedBy": "suhasHere",
      "mergeCommit": {
        "oid": "4f24f8ec48d940e60fa3e672583b1bbbd8eb34c3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOKMx0ks5ZanbJ",
      "title": "add depends example",
      "url": "https://github.com/moq-wg/catalog-format/pull/14",
      "state": "MERGED",
      "author": "suhasHere",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #10 ",
      "createdAt": "2023-09-03T04:48:45Z",
      "updatedAt": "2023-10-09T15:56:10Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "1dc09fb0134cd9ed4291f03512451e791e2f2649",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "deps",
      "headRefOid": "c006a142270e2579e604fd897ed0aaff5052b91c",
      "closedAt": "2023-09-03T04:58:25Z",
      "mergedAt": "2023-09-03T04:58:25Z",
      "mergedBy": "suhasHere",
      "mergeCommit": {
        "oid": "c7756e3307998c1ec558086dd028bbf575c26112"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 15,
      "id": "PR_kwDOKMx0ks5Zf6eC",
      "title": "Update draft-wilaw-moq-catalogformat.md",
      "url": "https://github.com/moq-wg/catalog-format/pull/15",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #4",
      "createdAt": "2023-09-04T15:46:34Z",
      "updatedAt": "2023-09-04T15:49:45Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "c7756e3307998c1ec558086dd028bbf575c26112",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "28eecbbd8fceaebfce37883fae181eda3457362a",
      "closedAt": "2023-09-04T15:49:41Z",
      "mergedAt": "2023-09-04T15:49:41Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "2c13548417fbe857c5f930dc43a950a0aad0fae0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOKMx0ks5Zf826",
      "title": "Update draft-wilaw-moq-catalogformat.md",
      "url": "https://github.com/moq-wg/catalog-format/pull/16",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #6",
      "createdAt": "2023-09-04T15:52:59Z",
      "updatedAt": "2023-09-04T15:55:50Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "2c13548417fbe857c5f930dc43a950a0aad0fae0",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "a8e9323ea1c424f608330c243a3bd2decea38862",
      "closedAt": "2023-09-04T15:55:47Z",
      "mergedAt": "2023-09-04T15:55:47Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "09988cece7b4e16b59e48e180a12aace75d37960"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 17,
      "id": "PR_kwDOKMx0ks5ZgG3z",
      "title": "Update draft-wilaw-moq-catalogformat.md",
      "url": "https://github.com/moq-wg/catalog-format/pull/17",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #3",
      "createdAt": "2023-09-04T16:20:44Z",
      "updatedAt": "2023-09-04T16:24:20Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "09988cece7b4e16b59e48e180a12aace75d37960",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "b7ebfed7262d3a8ef4e6e73f23cdcf3f514197cc",
      "closedAt": "2023-09-04T16:24:17Z",
      "mergedAt": "2023-09-04T16:24:17Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "8941801a20dd70cae709c370e8c9768734eaa35c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "PR_kwDOKMx0ks5Z4Giw",
      "title": "Update draft-wilaw-moq-catalogformat.md",
      "url": "https://github.com/moq-wg/catalog-format/pull/20",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #19",
      "createdAt": "2023-09-08T13:09:49Z",
      "updatedAt": "2023-09-08T13:11:32Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "8941801a20dd70cae709c370e8c9768734eaa35c",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "7903d96f3309865892d8d7d7591791894a5d2181",
      "closedAt": "2023-09-08T13:11:28Z",
      "mergedAt": "2023-09-08T13:11:28Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "2b44be3c5a7ec93533c0930f9ec4809246b56ef3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "PR_kwDOKMx0ks5Z4JCk",
      "title": "Update draft-wilaw-moq-catalogformat.md",
      "url": "https://github.com/moq-wg/catalog-format/pull/21",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #18",
      "createdAt": "2023-09-08T13:15:56Z",
      "updatedAt": "2023-09-08T13:25:35Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "2b44be3c5a7ec93533c0930f9ec4809246b56ef3",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "a7d8d7860586db7f1dd88ce3439598e08b83e133",
      "closedAt": "2023-09-08T13:25:30Z",
      "mergedAt": "2023-09-08T13:25:30Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "320c1ff602512c7ef54443b60ebf6aaa428891f5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 23,
      "id": "PR_kwDOKMx0ks5bMyVo",
      "title": "Update draft-wilaw-moq-catalogformat.md",
      "url": "https://github.com/moq-wg/catalog-format/pull/23",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #22",
      "createdAt": "2023-09-26T07:54:40Z",
      "updatedAt": "2023-09-26T07:58:23Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "320c1ff602512c7ef54443b60ebf6aaa428891f5",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "6798d1ac63ae622a2ce7aa5129d5fadfaa90f342",
      "closedAt": "2023-09-26T07:58:19Z",
      "mergedAt": "2023-09-26T07:58:19Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "97a8e76400526049894a7d1c4a902ddbe6b85ce9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 30,
      "id": "PR_kwDOKMx0ks5ehD7J",
      "title": "Fixing track names in example 3.4.7",
      "url": "https://github.com/moq-wg/catalog-format/pull/30",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #24",
      "createdAt": "2023-11-03T09:54:38Z",
      "updatedAt": "2023-11-09T17:29:56Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "c9f755920bb852dd4226f7e5827e4e80c9f633d7",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "bcbb69724407c07b3bf599ff7b36f5dfc1342ce3",
      "closedAt": "2023-11-09T17:29:50Z",
      "mergedAt": "2023-11-09T17:29:50Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "1bb5a51c33eb16b42426ae989e140b4b53239013"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 32,
      "id": "PR_kwDOKMx0ks5eoA0N",
      "title": "Adding JSON Patch",
      "url": "https://github.com/moq-wg/catalog-format/pull/32",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR adds support RFC6902 JSON patching as the delta update mechanism for catalogs. \r\n\r\nFixes #31 ",
      "createdAt": "2023-11-05T20:18:16Z",
      "updatedAt": "2023-11-29T13:56:06Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "1bb5a51c33eb16b42426ae989e140b4b53239013",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-2",
      "headRefOid": "fdf6acf86093001a99dcbcbd7a7ccf670c150a25",
      "closedAt": "2023-11-29T13:56:01Z",
      "mergedAt": "2023-11-29T13:56:01Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "aadd03e2bd1982047e1e618798a7307d6987810f"
      },
      "comments": [
        {
          "author": "fluffy",
          "authorAssociation": "NONE",
          "body": "I sort of feel like this is a bit of premature optimization - do we have so many and updates to catalog that this is needed ?",
          "createdAt": "2023-11-07T16:35:09Z",
          "updatedAt": "2023-11-07T16:35:09Z"
        },
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "Based on [discussion](https://notes.ietf.org/notes-ietf-118-moq) at IETF 118, merging this PR. ",
          "createdAt": "2023-11-29T13:47:15Z",
          "updatedAt": "2023-11-29T13:47:15Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 34,
      "id": "PR_kwDOKMx0ks5eqr8j",
      "title": "Allowing relative track names and inherited namespace",
      "url": "https://github.com/moq-wg/catalog-format/pull/34",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #33 ",
      "createdAt": "2023-11-06T10:00:11Z",
      "updatedAt": "2023-11-09T17:28:06Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "c9f755920bb852dd4226f7e5827e4e80c9f633d7",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-3",
      "headRefOid": "efb49f673e1d0fa31026fbb887bbcae47a38964e",
      "closedAt": "2023-11-09T17:28:01Z",
      "mergedAt": "2023-11-09T17:28:01Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "49599e9687c4878ec345989cc2aad31517740e5b"
      },
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "Consensus for merging at IETF #118 meeting. ",
          "createdAt": "2023-11-09T17:27:46Z",
          "updatedAt": "2023-11-09T17:27:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKMx0ks5maS8M",
          "commit": {
            "abbreviatedOid": "efb49f6"
          },
          "author": "fluffy",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "I know there has been lots of debate on this but it seems reasonable. ",
          "createdAt": "2023-11-07T16:33:36Z",
          "updatedAt": "2023-11-07T16:33:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOKMx0ks5jzAl2",
      "title": "Update draft-wilaw-moq-catalogformat.md",
      "url": "https://github.com/moq-wg/catalog-format/pull/36",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Removes obsolete sequence parameter from examples.\r\n\r\nFixes #35",
      "createdAt": "2024-01-11T12:12:26Z",
      "updatedAt": "2024-04-03T15:37:29Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "aadd03e2bd1982047e1e618798a7307d6987810f",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-1",
      "headRefOid": "b6ad10c0588e915031d6407d3b594235df2f10de",
      "closedAt": "2024-04-03T15:37:25Z",
      "mergedAt": "2024-04-03T15:37:25Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "69e9977715715dc366475988f612b7869f043594"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 39,
      "id": "PR_kwDOKMx0ks5omP8A",
      "title": "Adds an IANA registry for catalog fields",
      "url": "https://github.com/moq-wg/catalog-format/pull/39",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #26 ",
      "createdAt": "2024-03-04T14:28:52Z",
      "updatedAt": "2024-04-03T15:38:24Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "aadd03e2bd1982047e1e618798a7307d6987810f",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-2",
      "headRefOid": "125a5db14e2727cf238804f2bb9b25db59a5f580",
      "closedAt": "2024-04-03T15:38:20Z",
      "mergedAt": "2024-04-03T15:38:20Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "70ca2c7c2d5c313714445f6ed451402d722b9169"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 40,
      "id": "PR_kwDOKMx0ks5omrYQ",
      "title": "Add a new field to indicate if delta updates are to be expected",
      "url": "https://github.com/moq-wg/catalog-format/pull/40",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #38 by adding in a new field to indicate if delta updates (patches) will be used by the publisher. Also updated the examples to match.",
      "createdAt": "2024-03-04T15:23:23Z",
      "updatedAt": "2024-04-09T10:06:16Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "aadd03e2bd1982047e1e618798a7307d6987810f",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-3",
      "headRefOid": "404307849b0aa463b81d9d6290a54c558905173e",
      "closedAt": "2024-04-09T10:06:13Z",
      "mergedAt": "2024-04-09T10:06:13Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "5c523e96a9d89479f978440fedf1a976f916904b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 42,
      "id": "PR_kwDOKMx0ks5ouZfS",
      "title": "Add a new root object to hold inheritable track fields. ",
      "url": "https://github.com/moq-wg/catalog-format/pull/42",
      "state": "MERGED",
      "author": "wilaw",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add a new root object to hold inheritable track fields. \r\nUpdate all examples.\r\n\r\nFixes #37",
      "createdAt": "2024-03-05T14:22:58Z",
      "updatedAt": "2024-04-11T09:03:55Z",
      "baseRepository": "moq-wg/catalog-format",
      "baseRefName": "main",
      "baseRefOid": "5c523e96a9d89479f978440fedf1a976f916904b",
      "headRepository": "moq-wg/catalog-format",
      "headRefName": "wilaw-patch-4",
      "headRefOid": "07b667029f583ed350890645c1b88892497d627e",
      "closedAt": "2024-04-11T09:03:51Z",
      "mergedAt": "2024-04-11T09:03:51Z",
      "mergedBy": "wilaw",
      "mergeCommit": {
        "oid": "82588b9513e219f85cc7f79e4b66e3d18426d6f6"
      },
      "comments": [
        {
          "author": "suhasHere",
          "authorAssociation": "COLLABORATOR",
          "body": "I am not a big fan of this approach. This led to all sort of problems with SDP Session Level attributes.\r\n\r\nMy main concerns\r\n- How do we ensure the field that goes in this are not of type that represent aggregated values for all the tracks. Things like BW is easy to fall in this trap\r\n- What problem is it solving other than moving these to per track level.\r\nMay be I am missing something here . open to learn more, Thanks\r\n",
          "createdAt": "2024-03-05T16:58:24Z",
          "updatedAt": "2024-03-05T16:58:24Z"
        },
        {
          "author": "wilaw",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\n> * How do we ensure the field that goes in this are not of type that represent aggregated values for all the tracks. Things like BW is easy to fall in this trap\r\n\r\nThere are no aggregated fields currently defined. All track selection properties, such as 'Bitate\" apply only to that track. If multiple tracks have the same bitrate value, then that bitrate value can be placed inside a SelectionProperties object which is placed inside the Common Track Fields object. \r\n\r\n> * What problem is it solving other than moving these to per track level.\r\n>   May be I am missing something here . open to learn more, Thanks\r\n\r\nThis is not moving anything to a per track level. Rather, it is providing a clear location to place track properties which are intended to be inherited by all tracks. IN the future, we may wish to add fields to the root which are not intended to be inherited, something for which the prior design left no mechanism for accomplishing. \r\n\r\n",
          "createdAt": "2024-03-05T17:33:24Z",
          "updatedAt": "2024-03-05T17:33:24Z"
        },
        {
          "author": "suhasHere",
          "authorAssociation": "COLLABORATOR",
          "body": "> There are no aggregated fields currently defined. All track selection properties, such as 'Bitate\" apply only to that track. If multiple tracks have the same bitrate value, then that bitrate value can be placed inside a SelectionProperties object which is placed inside the Common Track Fields object.\r\n\r\nmakes sense and understand. We want to careful and not end up adding aggregates .  How about we rename it \"Inherirted Fields\" instead and be explicit about it \r\n\r\n> here are no aggregated fields currently defined. All track selection properties, such as 'Bitate\" apply only to that track. If multiple tracks have the same bitrate value, then that bitrate value can be placed inside a SelectionProperties object which is placed inside the Common Track Fields object.\r\n",
          "createdAt": "2024-03-05T17:55:23Z",
          "updatedAt": "2024-03-05T17:55:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKMx0ks52yU_s",
          "commit": {
            "abbreviatedOid": "07b6670"
          },
          "author": "suhasHere",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-11T00:30:22Z",
          "updatedAt": "2024-04-11T00:30:22Z",
          "comments": []
        }
      ]
    }
  ]
}